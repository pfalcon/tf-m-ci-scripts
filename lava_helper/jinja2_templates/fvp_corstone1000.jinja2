{#------------------------------------------------------------------------------
# Copyright (c) 2018-2022, Arm Limited and Contributors. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
#-----------------------------------------------------------------------------#}
{% extends 'jinja2_templates/base.jinja2' %}
{% block metadata %}
{{ super() }}
{% endblock %}
{% block base %}
{{ super() }}
{% endblock %}
{% block actions %}
context:
  kernel_start_message: ''

actions:
- deploy:
    namespace: docker
    to: fvp
    images:
      app:
        url: {{ application_url }}
      data:
        url: {{ data_url }}
- boot:
    failure_retry: 3
    namespace: docker
    method: fvp
    docker:
      name: {{ docker_prefix }}/fvp:fvp_corstone_1000_11.19_21_linux64
      local: true
    prompts:
    - 'root@lava '
    image: /opt/model/FVP_Corstone_1000/models/Linux64_GCC-9.3/FVP_Corstone-1000
    timeout:
      minutes: 5
    console_string: 'secenc_terminal: Listening for serial connection on port (?P<PORT>\d+)'
    license_variable: '{{ license_variable }}'
    use_telnet: True
    arguments:
    -  "-C se.trustedBootROMloader.fname=\"{APP}\""
    -  "-C board.flashloader0.fname=\"none\""
    -  "-C board.xnvm_size=64"
    -  "-C se.trustedSRAM_config=6"
    -  "-C se.BootROM_config=\"3\""
    -  "-C board.smsc_91c111.enabled=0"
    -  "-C board.hostbridge.userNetworking=true"
    -  "--data board.flash0={DATA}@{{ data_bin_offset }}"
    -  "-C diagnostics=4"
    -  "-C disable_visualisation=true"
    -  "-C board.se_flash_size=8192"
    -  "-C se.secenc_terminal.start_telnet=1"
    -  "-C extsys0.extsys_terminal.start_telnet=0"
    -  "-C host.host_terminal_0.start_telnet=1"
    -  "-C host.host_terminal_1.start_telnet=1"
    -  "-C se.cryptocell.USER_OTP_FILTERING_DISABLE=1"
    prompts:
    - '(.*)'

- test:
    namespace: target
    monitors:
    {%- for monitor in monitors %}
    - name: "{{monitor.name}}"
      start: "{{monitor.start}}"
      end: "{{monitor.end}}"
      pattern: "{{monitor.pattern}}"
      fixupdict:
         '{{monitor.fixup.pass}}': pass
         '{{monitor.fixup.fail}}': fail
         {%- if monitor.fixup.skip %}
         '{{monitor.fixup.skip}}': skip
         {%- endif %}
    {%- endfor %}

{% endblock %}
